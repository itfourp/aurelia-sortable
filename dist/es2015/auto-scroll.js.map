{"version":3,"sources":["../../src/auto-scroll.js"],"names":["transient","AutoScroll","rAFId","speed","active","start","update","element","dirX","dirY","frameCntX","frameCntY","cancelAnimationFrame","scrollDeltaX","scrollDeltaY","autoScroll","scrollLeft","scrollTop","requestAnimationFrame","end","cAF"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,8BAAxB;;AAGA,WAAaC,UAAb,WADCD,WACD,gBAAO,MAAMC,UAAN,CAAiB;AAAA;AAAA,SACtBC,KADsB,GACd,CAAC,CADa;AAAA,SAEtBC,KAFsB,GAEd,EAFc;AAAA,SAGtBC,MAHsB,GAGb,KAHa;AAAA;;AAKtBC,QAAMF,QAAQ,EAAd,EAAkB;AAChB,SAAKA,KAAL,GAAaA,KAAb;AACD;AACDG,SAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkD;AAChD,QAAI,KAAKP,MAAT,EAAiB;AACf,UAAII,SAAS,CAAT,IAAcC,SAAS,CAA3B,EAA8B;AAC5BG,6BAAqB,KAAKV,KAA1B;AACA,aAAKE,MAAL,GAAc,KAAd;AACD;AACD;AACD;AACD,QAAII,SAAS,CAAT,IAAcC,SAAS,CAA3B,EAA8B;AAC5B;AACD;;AAED,QAAIC,cAAc,CAAd,IAAmBC,cAAc,CAArC,EAAwC;AACtC;AACD;;AAED,UAAME,eAAeL,OAAO,KAAKL,KAAjC;AACA,UAAMW,eAAeL,OAAO,KAAKN,KAAjC;;AAEA,UAAMY,aAAa,MAAM;;AAEvB,UAAK,CAAC,KAAKX,MAAX,EAAoB;AAClB;AACD;AACD,UAAIM,YAAY,CAAhB,EAAmB;AACjBH,gBAAQS,UAAR,IAAsBH,YAAtB;AACD;AACD,UAAIF,YAAY,CAAhB,EAAmB;AACjBJ,gBAAQU,SAAR,IAAqBH,YAArB;AACD;;AAED,QAAEJ,SAAF;AACA,QAAEC,SAAF;AACA,UAAID,aAAa,CAAb,IAAkBC,aAAa,CAAnC,EAAsC;AACpC,aAAKP,MAAL,GAAc,KAAd;AACA;AACD;;AAED,WAAKF,KAAL,GAAagB,sBAAsBH,UAAtB,CAAb;AACD,KApBD;;AAsBA,SAAKX,MAAL,GAAc,IAAd;AACAW;AACD;AACDI,MAAIC,MAAMR,oBAAV,EAAgC;AAC9BQ,QAAI,KAAKlB,KAAT;AACA,SAAKE,MAAL,GAAc,KAAd;AACD;AAvDqB,CAAxB","file":"auto-scroll.js","sourcesContent":["import {transient} from \"aurelia-dependency-injection\";\r\n\r\n@transient()\r\nexport class AutoScroll {\r\n  rAFId = -1;\r\n  speed = 10;\r\n  active = false;\r\n\r\n  start(speed = 10) {\r\n    this.speed = speed;\r\n  }\r\n  update(element, dirX, dirY, frameCntX, frameCntY) {\r\n    if (this.active) {\r\n      if (dirX === 0 && dirY === 0) {\r\n        cancelAnimationFrame(this.rAFId);\r\n        this.active = false;\r\n      }\r\n      return;\r\n    }\r\n    if (dirX === 0 && dirY === 0) {\r\n      return;\r\n    }\r\n\r\n    if (frameCntX === 0 && frameCntY === 0) {\r\n      return;\r\n    }\r\n\r\n    const scrollDeltaX = dirX * this.speed;\r\n    const scrollDeltaY = dirY * this.speed;\r\n\r\n    const autoScroll = () => {\r\n\r\n      if ( !this.active ) {\r\n        return;\r\n      }\r\n      if (frameCntX > 0) {\r\n        element.scrollLeft += scrollDeltaX;\r\n      }\r\n      if (frameCntY > 0) {\r\n        element.scrollTop += scrollDeltaY;\r\n      }\r\n\r\n      --frameCntX;\r\n      --frameCntY;\r\n      if (frameCntX <= 0 && frameCntY <= 0) {\r\n        this.active = false;\r\n        return;\r\n      }\r\n\r\n      this.rAFId = requestAnimationFrame(autoScroll);\r\n    };\r\n\r\n    this.active = true;\r\n    autoScroll();\r\n  }\r\n  end(cAF = cancelAnimationFrame) {\r\n    cAF(this.rAFId);\r\n    this.active = false;\r\n  }\r\n}\r\n"]}